//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.9.2
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from C:\Development\ReceiptLineParser\ReceiptLine.Parser.Grammer\ReceiptLineParser.g4 by ANTLR 4.9.2

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

namespace ReceiptLine.Parser {

using Antlr4.Runtime.Misc;
using IErrorNode = Antlr4.Runtime.Tree.IErrorNode;
using ITerminalNode = Antlr4.Runtime.Tree.ITerminalNode;
using IToken = Antlr4.Runtime.IToken;
using ParserRuleContext = Antlr4.Runtime.ParserRuleContext;

/// <summary>
/// This class provides an empty implementation of <see cref="IReceiptLineParserListener"/>,
/// which can be extended to create a listener which only needs to handle a subset
/// of the available methods.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.9.2")]
[System.Diagnostics.DebuggerNonUserCode]
[System.CLSCompliant(false)]
public partial class ReceiptLineParserBaseListener : IReceiptLineParserListener {
	/// <summary>
	/// Enter a parse tree produced by <see cref="ReceiptLineParser.file"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFile([NotNull] ReceiptLineParser.FileContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ReceiptLineParser.file"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFile([NotNull] ReceiptLineParser.FileContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ReceiptLineParser.document"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterDocument([NotNull] ReceiptLineParser.DocumentContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ReceiptLineParser.document"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitDocument([NotNull] ReceiptLineParser.DocumentContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ReceiptLineParser.lines"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterLines([NotNull] ReceiptLineParser.LinesContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ReceiptLineParser.lines"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitLines([NotNull] ReceiptLineParser.LinesContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ReceiptLineParser.line"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterLine([NotNull] ReceiptLineParser.LineContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ReceiptLineParser.line"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitLine([NotNull] ReceiptLineParser.LineContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ReceiptLineParser.columns"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterColumns([NotNull] ReceiptLineParser.ColumnsContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ReceiptLineParser.columns"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitColumns([NotNull] ReceiptLineParser.ColumnsContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ReceiptLineParser.content"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterContent([NotNull] ReceiptLineParser.ContentContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ReceiptLineParser.content"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitContent([NotNull] ReceiptLineParser.ContentContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ReceiptLineParser.column"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterColumn([NotNull] ReceiptLineParser.ColumnContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ReceiptLineParser.column"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitColumn([NotNull] ReceiptLineParser.ColumnContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ReceiptLineParser.text"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterText([NotNull] ReceiptLineParser.TextContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ReceiptLineParser.text"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitText([NotNull] ReceiptLineParser.TextContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ReceiptLineParser.property"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterProperty([NotNull] ReceiptLineParser.PropertyContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ReceiptLineParser.property"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitProperty([NotNull] ReceiptLineParser.PropertyContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ReceiptLineParser.members"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterMembers([NotNull] ReceiptLineParser.MembersContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ReceiptLineParser.members"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitMembers([NotNull] ReceiptLineParser.MembersContext context) { }

	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void EnterEveryRule([NotNull] ParserRuleContext context) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void ExitEveryRule([NotNull] ParserRuleContext context) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void VisitTerminal([NotNull] ITerminalNode node) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void VisitErrorNode([NotNull] IErrorNode node) { }
}
} // namespace ReceiptLine.Parser
